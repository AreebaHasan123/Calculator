==49648== Memcheck, a memory error detector
==49648== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==49648== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==49648== Command: ./assignment3
==49648== 
Insert statement or QUIT: 
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
==49648== 
==49648== Process terminating with default action of signal 6 (SIGABRT)
==49648==    at 0x5CB5387: raise (in /usr/lib64/libc-2.17.so)
==49648==    by 0x5CB6A77: abort (in /usr/lib64/libc-2.17.so)
==49648==    by 0x54BFA94: __gnu_cxx::__verbose_terminate_handler() (in /usr/lib64/libstdc++.so.6.0.19)
==49648==    by 0x54BDA05: ??? (in /usr/lib64/libstdc++.so.6.0.19)
==49648==    by 0x54BDA32: std::terminate() (in /usr/lib64/libstdc++.so.6.0.19)
==49648==    by 0x54BDC52: __cxa_throw (in /usr/lib64/libstdc++.so.6.0.19)
==49648==    by 0x55129B6: std::__throw_invalid_argument(char const*) (in /usr/lib64/libstdc++.so.6.0.19)
==49648==    by 0x4031D2: Operation::calc(std::string const&, Expr_Command_Factory&, Array<Expr_Command*>&) (in /home/arehasan/CSCI36300/assignment3/assignment3)
==49648==    by 0x401DDE: main (in /home/arehasan/CSCI36300/assignment3/assignment3)
==49648== 
==49648== HEAP SUMMARY:
==49648==     in use at exit: 258 bytes in 19 blocks
==49648==   total heap usage: 26 allocs, 7 frees, 343 bytes allocated
==49648== 
==49648== LEAK SUMMARY:
==49648==    definitely lost: 0 bytes in 9 blocks
==49648==    indirectly lost: 0 bytes in 0 blocks
==49648==      possibly lost: 144 bytes in 1 blocks
==49648==    still reachable: 114 bytes in 9 blocks
==49648==                       of which reachable via heuristic:
==49648==                         stdstring          : 114 bytes in 4 blocks
==49648==         suppressed: 0 bytes in 0 blocks
==49648== Rerun with --leak-check=full to see details of leaked memory
==49648== 
==49648== For lists of detected and suppressed errors, rerun with: -s
==49648== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
